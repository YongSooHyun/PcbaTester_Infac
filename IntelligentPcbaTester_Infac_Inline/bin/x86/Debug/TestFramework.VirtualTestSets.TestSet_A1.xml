<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TestFramework.VirtualTestSets.TestSet_A1</name>
    </assembly>
    <members>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit">
            <summary>
            Power Up Unit
            </summary>
            <summary>
            Power Up Unit
            </summary>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass">
            <summary>
            Auxiliary Switch Unit (part of the Power Up Unit)
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.RelayCount">
            <summary>
            The number of available relays.
            </summary>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.AuxiliaryRelay">
            <summary>
            Auxiliary Relay
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.AuxiliaryRelay.Name">
            <summary>
            The name of the device.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.AuxiliaryRelay.GetDefaultName">
            <summary>
            Gets the default name of the device.
            </summary>
            <returns>The default name</returns>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.AuxiliaryRelay.HasPendingChanges">
            <summary>
            Indicates whether the device has uncommitted settings.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.AuxiliaryRelay.SetConnectionOn">
            <summary>
            Sets the relay to be closed.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.AuxiliaryRelay.SetConnectionOff">
            <summary>
            Sets the relay to be opened.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.AuxiliaryRelay.GetConnectionInfo">
            <summary>
            Creates a text with the present connection information of the device.
            </summary>
            <returns>The connection information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.AuxiliaryRelay.GetConnectionInfo(System.String)">
            <summary>
            Creates a text with the present connection information of the device.
            </summary>
            <param name="Format">reserved</param>
            <returns>The connection information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.AuxiliaryRelay.GetSettingsInfo">
            <summary>
            Creates a text with the present setting information of the device.
            </summary>
            <returns>The setting information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.AuxiliaryRelay.GetSettingsInfo(System.String)">
            <summary>
            Creates a text with the present setting information of the device.
            </summary>
            <param name="Format">reserved</param>
            <returns>The setting information text</returns>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.Name">
            <summary>
            The name of the device.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.PowerUnitNumber">
            <summary>
            The ID of the Power Up Unit owning this device.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.Relay">
            <summary>
            Array of relays.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.ResourceRequest(System.Int32,System.Int32)">
            <summary>
            Requests for the resource 'auxiliary switch unit'.
            </summary>
            <param name="ProcessID">ID of the current test process</param>
            <param name="DeviceCount">Number of requested devices</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.GetDevice(TestFramework.VirtualTestSets.TestSet_A1.TestSet,System.Int32,System.Int32)">
            <summary>
            Gets an auxiliary switch object that gives access to the requested unit.
            </summary>
            <param name="Owner">The test set owning this device</param>
            <param name="Index">The index of this device within the owner's list</param>
            <param name="PowerUpUnitNumber">The number of the related Power Up Unit</param>
            <returns>A auxiliary switch unit</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.Z(System.Object)">
            <summary>
            Do not use. For internal purposes only.
            </summary>
            <param name="arg">arg</param>
            <returns>object</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.Dispose">
            <summary>
            Releases the auxiliary switch object.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.HasPendingChanges">
            <summary>
            Indicates whether the device has uncommitted settings.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.Reset">
            <summary>
            Resets the auxiliary switch unit (implicitly commits the settings).
            </summary>
            <remarks>
            All relays will be opened.
            All changes are committed automatically.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.Commit">
            <summary>
            Commits all value and connection settings of the device.
            </summary>
            <returns>True, if there where changes to be committed</returns>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.SlotNumber">
            <summary>
            The slot number of the power up unit containing the auxiliary switch.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.ClearConnections">
            <summary>
            Opens all relays.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.CommitConnections">
            <summary>
            Commits all connection settings of the device.
            </summary>
            <returns>True, if there where changes to be committed</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.CommitSettings">
            <summary>
            Commits all value settings.
            </summary>
            <returns>True, if there where changes to commit</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.GetSettingsInfo">
            <summary>
            Creates a text with the present setting information of the device.
            </summary>
            <returns>The setting information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.GetSettingsInfo(System.String)">
            <summary>
            Creates a text with the present setting information of the device.
            </summary>
            <param name="Format">reserved</param>
            <returns>The setting information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.GetConnectionInfo">
            <summary>
            Creates a text with the present connection information of the device.
            </summary>
            <returns>The connection information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitchClass.GetConnectionInfo(System.String)">
            <summary>
            Creates a text with the present connection information of the device.
            </summary>
            <param name="Format">reserved</param>
            <returns>The connection information text</returns>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass">
            <summary>
            Digital Input Digital Output Unit (part of the Power Up Unit)
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.InputChannelCount">
            <summary>
            The number of available digital input channels.
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.OutputChannelCount">
            <summary>
            The number of available digital output channels.
            </summary>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.InputChannelClass">
            <summary>
            Digital Input Channel
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.InputChannelClass.Name">
            <summary>
            The name of the device.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.InputChannelClass.GetDefaultName">
            <summary>
            Gets the default name of the device.
            </summary>
            <returns>The default name</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.InputChannelClass.SetFrontConnectionOn">
            <summary>
            Connects the digital input with the front connector.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.InputChannelClass.SetFrontConnectionOff">
            <summary>
            Disconnects the digital input from the front connector.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.InputChannelClass.ReadInputSignal">
            <summary>
            Reads the present input signal.
            </summary>
            <returns>The input signal (0 is low and 1 is high)</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.InputChannelClass.FetchInputSignal(System.Int32)">
            <summary>
            Sets a fetch for the input signal.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <remarks>
            Each requested fetch operation must be identified by a unique number, the 'Fetch ID'.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.InputChannelClass.GetFetchedInputSignal(System.Int32)">
            <summary>
            Gets the state of a fetched input signal.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <returns>The input signal (0 is low and 1 is high)</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.InputChannelClass.GetConnectionInfo">
            <summary>
            Creates a text with the present connection information of the channel.
            </summary>
            <returns>The connection information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.InputChannelClass.GetConnectionInfo(System.String)">
            <summary>
            Creates a text with the present connection information of the channel.
            </summary>
            <param name="Format">reserved</param>
            <returns>The connection information text</returns>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.OutputChannelClass">
            <summary>
            Digital Output Channel
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.OutputChannelClass.Name">
            <summary>
            The name of the device.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.OutputChannelClass.HasPendingChanges">
            <summary>
            Indicates whether the device has uncommitted settings.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.OutputChannelClass.SetSignal(System.Int32)">
            <summary>
            Sets the output signal.
            </summary>
            <param name="Signal">[0,1] 0 is low signal and 1 is high signal.</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.OutputChannelClass.SetSignalHigh">
            <summary>
            Sets the output signal to high.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.OutputChannelClass.SetSignalLow">
            <summary>
            Sets the output signal to low.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.OutputChannelClass.GetOutputSignal">
            <summary>
            Gets the set output signal.
            </summary>
            <returns>The set output signal (0 is low and 1 is high).</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.OutputChannelClass.SetFrontConnectionOn">
            <summary>
            Connects the digital output with the front connector.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.OutputChannelClass.SetFrontConnectionOff">
            <summary>
            Disconnects the digital output from the front connector.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.OutputChannelClass.GetSettingsInfo">
            <summary>
            Creates a text with the present setting information of the channel.
            </summary>
            <returns>The setting information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.OutputChannelClass.GetSettingsInfo(System.String)">
            <summary>
            Creates a text with the present setting information of the channel.
            </summary>
            <param name="Format">reserved</param>
            <returns>The setting information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.OutputChannelClass.GetConnectionInfo">
            <summary>
            Creates a text with the present connection information of the channel.
            </summary>
            <returns>The connection information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.OutputChannelClass.GetConnectionInfo(System.String)">
            <summary>
            Creates a text with the present connection information of the channel.
            </summary>
            <param name="Format">reserved</param>
            <returns>The connection information text</returns>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.Name">
            <summary>
            The name of the device.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.PowerUnitNumber">
            <summary>
            The ID of the Power Up Unit owning this device.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.InputChannel">
            <summary>
            Array of digital input channels.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.OutputChannel">
            <summary>
            Array of digital output channels.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.ResourceRequest(System.Int32,System.Int32)">
            <summary>
            Requests for the resource 'digital I/O unit'.
            </summary>
            <param name="ProcessID">ID of the current test process</param>
            <param name="DeviceCount">Number of requested devices</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.GetDevice(TestFramework.VirtualTestSets.TestSet_A1.TestSet,System.Int32,System.Int32)">
            <summary>
            Gets a digital I/O object that gives access to the requested unit.
            </summary>
            <param name="Owner">The test set owning this device</param>
            <param name="Index">The index of this device within the owner's list</param>
            <param name="PowerUpUnitNumber">The number of the related Power Up Unit</param>
            <returns>A digital I/O unit</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.Z(System.Object)">
            <summary>
            Do not use. For internal purposes only.
            </summary>
            <param name="arg">arg</param>
            <returns>object</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.Dispose">
            <summary>
            Releases the digital I/O object.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.HasPendingChanges">
            <summary>
            Indicates whether the device has uncommitted settings.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.Reset">
            <summary>
            Resets the digital I/O device (implicitly commits the settings).
            </summary>
            <remarks>
            Assigns defaults to all settings. All connections will be disconnected.
            All changes are committed automatically.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.Reset(System.Boolean)">
            <summary>
            Resets the digital I/O device (implicitly commits the settings).
            </summary>
            <param name="Disconnect">If true, all connections will also be disconnected</param>
            <remarks>
            Assigns defaults to all settings.
            All changes are committed automatically.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.Commit">
            <summary>
            Commits all value and connection settings of the device.
            </summary>
            <returns>True, if there where changes to be committed</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.SetOutputSignals(System.Byte)">
            <summary>
            Sets all output signals.
            </summary>
            <param name="Signals">Signals</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.SetOutputSignals(System.String)">
            <summary>
            Sets all output signals.
            </summary>
            <param name="Signals">Signals as a string, one character [0,1,L,H,*] for each channel.</param>
            <remarks>
            The string must have one character for each channel. Each character is assigned to the corresponding channel.
            '1' or 'H' sets 1, '0' or 'L' sets 0 and '*' lets the signal unchanged.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.CommitSettings">
            <summary>
            Commits all value settings.
            </summary>
            <returns>True, if there where changes to commit</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.GetOutputSignals">
            <summary>
            Gets the set output signals.
            </summary>
            <returns>The set output signals (0 is low and 1 is high)</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.FetchInputSignals(System.Int32)">
            <summary>
            Sets a fetch for the input signals.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <remarks>
            Each requested fetch operation must be identified by a unique number, the 'Fetch ID'.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.GetFetchedInputSignals(System.Int32)">
            <summary>
            Gets the states of fetched input signals.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <returns>The input signals (0 is low and 1 is high)</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.ReadInputSignals">
            <summary>
            Reads the present input signals.
            </summary>
            <returns>The input signals (0 is low and 1 is high)</returns>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.SlotNumber">
            <summary>
            The slot number of the power up unit containing the digital I/O unit.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.SetInputFrontConnectionsOn">
            <summary>
            Sets all digital input channels to be connected with the front connector.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.SetInputFrontConnectionsOff">
            <summary>
            Sets all digital input channels to be disconnected from the front connector.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.SetOutputFrontConnectionsOn">
            <summary>
            Sets all digital output channels to be connected with the front connector.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.SetOutputFrontConnectionsOff">
            <summary>
            Sets all digital output channels to be disconnected from the front connector.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.ClearConnections">
            <summary>
            Sets the whole device to be disconnected from the front connector.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.CommitConnections">
            <summary>
            Commits the front connections of the device.
            </summary>
            <returns>True, if there where changes to be committed</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.GetSettingsInfo">
            <summary>
            Creates a text with the present setting information of the device.
            </summary>
            <returns>The setting information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.GetSettingsInfo(System.String)">
            <summary>
            Creates a text with the present setting information of the device.
            </summary>
            <param name="Format">reserved</param>
            <returns>The setting information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.GetConnectionInfo">
            <summary>
            Creates a text with the present connection information of the device.
            </summary>
            <returns>The connection information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIOClass.GetConnectionInfo(System.String)">
            <summary>
            Creates a text with the present connection information of the device.
            </summary>
            <param name="Format">reserved</param>
            <returns>The connection information text</returns>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass">
            <summary>
            Power Supply Unit (part of the Power Up Unit)
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.ChannelCount">
            <summary>
            The number of available channels.
            </summary>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.PowerSupplyChannel">
            <summary>
            Power Supply Channel
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.PowerSupplyChannel.Name">
            <summary>
            The name of the device.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.PowerSupplyChannel.GetDefaultName">
            <summary>
            Gets the default name of the device.
            </summary>
            <returns>The default name</returns>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.PowerSupplyChannel.HasPendingChanges">
            <summary>
            Indicates whether the device has uncommitted settings.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.PowerSupplyChannel.Reset">
            <summary>
            Resets the power supply channel (implicitly commits the settings).
            </summary>
            <remarks>
            Assigns defaults to all settings.
            All changes are committed automatically.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.PowerSupplyChannel.SetOutputVoltage(System.Double)">
            <summary>
            Sets the output voltage.
            </summary>
            <param name="Voltage">Output voltage</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.PowerSupplyChannel.SetOutputCurrent(System.Double)">
            <summary>
            Sets the output current range.
            </summary>
            <param name="Current">Output current [A] (the next higher available current range will be selected).</param>
            <remarks>
            Because of power limitations not every current range can be combined with every output voltage. 
            Thus the requested current range might not be available.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.PowerSupplyChannel.SetOutputCurrentRange(System.Int32)">
            <summary>
            Sets the output current range.
            </summary>
            <param name="CurrentRange">Output current range (1..5).</param>
            <remarks>
            Because of power limitations not every current range can be combined with every output voltage. 
            Thus the requested current range might not be available.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.PowerSupplyChannel.SetOutputEnabled">
            <summary>
            Enables the power supply channel.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.PowerSupplyChannel.SetOutputDisabled">
            <summary>
            Disables the power supply channel.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.PowerSupplyChannel.CommitSettings">
            <summary>
            Commits all settings of the channel.
            </summary>
            <returns>True, if there where changes to commit</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.PowerSupplyChannel.SetFrontConnectionOn">
            <summary>
            Connects the device with the front connector.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.PowerSupplyChannel.SetFrontConnectionOff">
            <summary>
            Disconnects the device from the front connector.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.PowerSupplyChannel.Measure(System.Double@,System.Double@)">
            <summary>
            Measures output current and voltage.
            </summary>
            <param name="Current">Measured current</param>
            <param name="Voltage">Measured voltage</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.PowerSupplyChannel.Measure(System.Double@,System.Double@,System.Int32@)">
            <summary>
            ! Not yet implemented !
            </summary>
            <param name="Current">Measured current</param>
            <param name="Voltage">Measured voltage</param>
            <param name="Status">Status flags</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.PowerSupplyChannel.FetchMeasurement(System.Int32)">
            <summary>
            Sets a fetch for a measurement.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <remarks>
            Each requested fetch operation must be identified by a unique number, the 'Fetch ID'.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.PowerSupplyChannel.GetFetchedMeasurement(System.Int32,System.Double@,System.Double@)">
            <summary>
            Gets the result of a fetched measurement.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <param name="Current">Measured current</param>
            <param name="Voltage">Measured voltage</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.PowerSupplyChannel.GetFetchedMeasurement(System.Int32,System.Double@,System.Double@,System.Int32@)">
            <summary>
            ! Not yet implemented !
            </summary>
            <param name="FetchID">Fetch ID</param>
            <param name="Current">Measured current</param>
            <param name="Voltage">Measured voltage</param>
            <param name="Status">Status flags</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.PowerSupplyChannel.GetConnectionInfo">
            <summary>
            Creates a text with the present connection information of the device.
            </summary>
            <returns>The connection information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.PowerSupplyChannel.GetConnectionInfo(System.String)">
            <summary>
            Creates a text with the present connection information of the device.
            </summary>
            <param name="Format">reserved</param>
            <returns>The connection information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.PowerSupplyChannel.GetOutputCurrent">
            <summary>
            Gets the set output current.
            </summary>
            <returns>The output current</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.PowerSupplyChannel.GetOutputVoltage">
            <summary>
            Gets the set output voltage.
            </summary>
            <returns>The output voltage</returns>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.PowerSupplyChannel.MaxOutputVoltage">
            <summary>
            The maximum output voltage.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.Name">
            <summary>
            The name of the device.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.PowerUnitNumber">
            <summary>
            The ID of the Power Up Unit owning this device.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.Channel">
            <summary>
            Array of power supply channels.
            </summary>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.OperationMode">
            <summary>
            The operation mode of the power supply.
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.OperationMode.SeparateChannels">
            <summary>
            The channels are operating as separate devices.
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.OperationMode.ChannelsInParallel">
            <summary>
            The channels are switched in parallel. Output is channel 0.
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.OperationMode.ChannelsInSeries">
            <summary>
            The channels are switched in series. Output is channel 0.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.ResourceRequest(System.Int32,System.Int32)">
            <summary>
            Requests for the resource 'power supply unit'.
            </summary>
            <param name="ProcessID">ID of the current test process</param>
            <param name="DeviceCount">Number of requested devices</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.GetDevice(TestFramework.VirtualTestSets.TestSet_A1.TestSet,System.Int32,System.Int32)">
            <summary>
            Gets a power supply object that gives access to the requested unit.
            </summary>
            <param name="Owner">The test set owning this device</param>
            <param name="Index">The index of this device within the owner's list</param>
            <param name="PowerUpUnitNumber">The number of the related Power Up Unit</param>
            <returns>A power supply unit</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.Z(System.Object)">
            <summary>
            Do not use. For internal purposes only.
            </summary>
            <param name="arg">arg</param>
            <returns>object</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.Dispose">
            <summary>
            Releases the power supply object.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.HasPendingChanges">
            <summary>
            Indicates whether the device has uncommitted settings.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.Reset">
            <summary>
            Resets the power supply unit (implicitly commits the settings).
            </summary>
            <remarks>
            Assigns defaults to all settings. All connections will be disconnected.
            All changes are committed automatically.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.Reset(System.Boolean)">
            <summary>
            Resets the power supply unit (implicitly commits the settings).
            </summary>
            <param name="Disconnect">If false, connections will not be disconnected and operation mode will not be reset</param>
            <remarks>
            Assigns defaults to all settings.
            All changes are committed automatically.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.Commit">
            <summary>
            Commits all value and connection settings of the device.
            </summary>
            <returns>True, if there where changes to be committed</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.SetOperationMode(TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.OperationMode)">
            <summary>
            Sets the operation mode.
            </summary>
            <param name="Mode">Operation mode</param>
            <remarks>Changing the operation mode will reset all channels.</remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.GetOperationMode">
            <summary>
            Gets the operation mode.
            </summary>
            <returns>The operation mode</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.CommitSettings">
            <summary>
            Commits all value settings.
            </summary>
            <returns>True, if there where changes to commit</returns>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.SlotNumber">
            <summary>
            The slot number of the power up unit containing the power supply.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.ClearConnections">
            <summary>
            Disconnects the device from the front connector.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.CommitConnections">
            <summary>
            Commits the front connections of the device.
            </summary>
            <returns>True, if there where changes to be committed</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.GetSettingsInfo">
            <summary>
            Creates a text with the present setting information of the device.
            </summary>
            <returns>The setting information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.GetSettingsInfo(System.String)">
            <summary>
            Creates a text with the present setting information of the device.
            </summary>
            <param name="Format">reserved</param>
            <returns>The setting information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.GetConnectionInfo">
            <summary>
            Creates a text with the present connection information of the device.
            </summary>
            <returns>The connection information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupplyClass.GetConnectionInfo(System.String)">
            <summary>
            Creates a text with the present connection information of the device.
            </summary>
            <param name="Format">reserved</param>
            <returns>The connection information text</returns>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.UnitNumber">
            <summary>
            The ID of the Power Up Unit.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.AuxiliarySwitch">
            <summary>
            Auxiliary Switch Unit.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.PowerSupply">
            <summary>
            Power Supply Unit.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.DigitalIO">
            <summary>
            Digital I/O Unit.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.PowerUpUnit.Z(System.Object)">
            <summary>
            Do not use. For internal purposes only.
            </summary>
            <param name="arg">arg</param>
            <returns>object</returns>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit">
            <summary>
            Digital Input/Output Unit (Bidirectional)
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelCount">
            <summary>
            The number of available digital channels.
            </summary>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelClass">
            <summary>
            Digital I/O Channel
            </summary>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelClass.Input">
            <summary>
            Representing an input status of a channel.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelClass.Input.Signal">
            <summary>
            The input signal (0 is low and 1 is high).
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelClass.Input.IsValid">
            <summary>
            True if the input signal voltage is within the expected ranges.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelClass.Input.IsAsDefined">
            <summary>
            True if the input signal is as defined.
            </summary>
            <remarks>
            If the sensor is set to
            'H': only a high signal is reasonable,
            'L': only a low signal is reasonable,
            'V': a high or a low signal is reasonable,
            'D': the output signal is reasonable,
            'X': any input signal is reasonable.
            </remarks>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelClass.Name">
            <summary>
            The name of the device.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelClass.GetDefaultName">
            <summary>
            Gets the default name of the device.
            </summary>
            <returns>The default name</returns>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelClass.HasPendingChanges">
            <summary>
            Indicates whether the device has uncommitted settings.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelClass.SetSignalHigh">
            <summary>
            Sets the output signal to high.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelClass.SetSignalLow">
            <summary>
            Sets the output signal to low.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelClass.GetSignalIsHigh">
            <summary>
            Gets the set signal.
            </summary>
            <returns>True if the signal is high.</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelClass.SetDriverOn">
            <summary>
            Sets the output to active.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelClass.SetDriverOff">
            <summary>
            Sets the output to tristate.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelClass.GetDriverIsOn">
            <summary>
            Gets the driver state setting.
            </summary>
            <returns>True, if the driver is set to 'on'.</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelClass.SetSensorOn">
            <summary>
            Sets the sensor to 'on'.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelClass.SetSensorOff">
            <summary>
            Sets the sensor to 'off'.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelClass.GetSensorIsOn">
            <summary>
            Gets the set sensor state.
            </summary>
            <returns>True, if the sensor is set to 'on'.</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelClass.SetComparisonOn">
            <summary>
            Sets the input signal comparison to 'on' (only effective if sensor is 'on').
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelClass.SetComparisonOff">
            <summary>
            Sets the input signal comparison to 'off'.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelClass.GetComparisonIsOn">
            <summary>
            Gets the set comparison state.
            </summary>
            <returns>True, if comparison is set to 'on'.</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelClass.SetFrontConnectionOn">
            <summary>
            Connects the digital i/o channel with the front connector.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelClass.SetFrontConnectionOff">
            <summary>
            Disconnects the digital i/o channel from the front connector.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelClass.GetFrontConnectionIsOn">
            <summary>
            Gets the connection state.
            </summary>
            <returns>True, if the digital i/o channel is set to be connected with the front connector.</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelClass.GetSettingsInfo">
            <summary>
            Creates a text with the present setting information of the channel.
            </summary>
            <returns>The setting information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelClass.GetSettingsInfo(System.String)">
            <summary>
            Creates a text with the present setting information of the channel.
            </summary>
            <param name="Format">reserved</param>
            <returns>The setting information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelClass.GetConnectionInfo">
            <summary>
            Creates a text with the present connection information of the channel.
            </summary>
            <returns>The connection information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelClass.GetConnectionInfo(System.String)">
            <summary>
            Creates a text with the present connection information of the channel.
            </summary>
            <param name="Format">reserved</param>
            <returns>The connection information text</returns>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelInput">
            <summary>
            The channel input data structure.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ChannelInput.Item(System.Int32)">
            <summary>
            The channel input
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.Input">
            <summary>
            Representing an input status of all channels using bitmaps. Bit 0 is representing channel 0, bit 1 channel 1 and so on.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.Input.Signals">
            <summary>
            The input signals as a bitmap (0 is low and 1 is high).
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.Input.Validation">
            <summary>
            The input signal validation as a bitmap (0 is within voltage range and 1 is not).
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.Input.Comparison">
            <summary>
            The input signal comparison result as a bitmap (0 is signal as expected and 1 is unexpected signal).
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.Input.IsValid">
            <summary>
            True if all input signals are within the expected voltage ranges.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.Input.IsAsDefined">
            <summary>
            True if all input signals are as expected.
            </summary>
            <remarks>
            If the sensor is set to
            'H': only a high signal is reasonable,
            'L': only a low signal is reasonable,
            'V': a high or a low signal is reasonable,
            'D': the output signal is reasonable,
            'X': any input signal is reasonable.
            </remarks>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.Input.Channel">
            <summary>
            The channel input.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.UnitNumber">
            <summary>
            The ID of the Digital I/O Unit.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.Name">
            <summary>
            The name of the device.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.Channel">
            <summary>
            Array of digital I/O channels.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ResourceRequest(System.Int32,System.Int32)">
            <summary>
            Requests for the resource 'digital I/O unit'.
            </summary>
            <param name="ProcessID">ID of the current test process</param>
            <param name="UnitNumber">The number of the device</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.GetDevice(TestFramework.VirtualTestSets.TestSet_A1.TestSet,System.Int32)">
            <summary>
            Gets a digital I/O object that gives access to the requested unit.
            </summary>
            <param name="Owner">The test set owning this device</param>
            <param name="UnitNumber">The number of the device</param>
            <returns>A digital I/O unit</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.Z(System.Object)">
            <summary>
            Do not use. For internal purposes only.
            </summary>
            <param name="arg">arg</param>
            <returns>object</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.Dispose">
            <summary>
            Releases the digital I/O object.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.HasPendingChanges">
            <summary>
            Indicates whether the device has uncommitted settings.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.Reset">
            <summary>
            Resets the digital I/O device (implicitly commits the settings).
            </summary>
            <remarks>
            Assigns defaults to all settings. All connections will be disconnected.
            All changes are committed automatically.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.Reset(System.Boolean)">
            <summary>
            Resets the digital I/O device.
            </summary>
            <param name="Disconnect">If true, all connections will also be disconnected</param>
            <remarks>
            Assigns defaults to all settings.
            All changes are committed automatically.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.Commit">
            <summary>
            Commits all value and connection settings of the device.
            </summary>
            <returns>True, if there where changes to be committed</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.SetDriverHighSignalVoltage(System.Double)">
            <summary>
            Sets the voltage for high signal output.
            </summary>
            <param name="Voltage">High signal voltage.</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.SetDriverLowSignalVoltage(System.Double)">
            <summary>
            Sets the voltage for low signal output.
            </summary>
            <param name="Voltage">Low signal voltage.</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.SetSensorHighSignalVoltageThreshold(System.Double)">
            <summary>
            Sets the voltage threshold for a valid high input signal.
            </summary>
            <param name="LowerThreshold">Lower voltage threshold for a valid high signal.</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.SetSensorLowSignalVoltageThreshold(System.Double)">
            <summary>
            Sets the voltage threshold for a valid low input signal.
            </summary>
            <param name="UpperThreshold">Upper voltage threshold for a valid low signal.</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.SetSignals(System.UInt32)">
            <summary>
            Sets all signals.
            </summary>
            <param name="Signals">Bit 0 applies to channel 0, bit 1 to channel 1 and so on. 1 is 'high' and 0 is 'low'.</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.SetDrivers(System.UInt32)">
            <summary>
            Sets all output driver states.
            </summary>
            <param name="States">Bit 0 applies to channel 0, bit 1 to channel 1 and so on. 1 is 'active' and 0 is 'tristate'.</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.SetSensors(System.UInt32,System.UInt32)">
            <summary>
            Sets all input sensor states.
            </summary>
            <param name="States">Bit 0 applies to channel 0, bit 1 to channel 1 and so on. 1 is 'sensor on' and 0 is 'sensor off'</param>
            <param name="Comparisons">Bit 0 applies to channel 0, bit 1 to channel 1 and so on. 1 is 'compare signal' and 0 is 'don't care'</param>
            <remarks>
            Comparison will only be effective if sensor is 'on'.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.SetSensors(System.UInt32)">
            <summary>
            Sets all input sensors.
            </summary>
            <param name="States">Bit 0 applies to channel 0, bit 1 to channel 1 and so on. 1 is 'sensor on and compare signal' and 0 is 'sensor off and don't care'</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.SetSensors(System.String)">
            <summary>
            Sets definitions for all input signals.
            </summary>
            <param name="Signals">Definition of expected signals as a string, one character for each channel [1,0,H,L,V,D,X,*].</param>
            <remarks>
            The string must contain one character for each channel. Each character applies to the corresponding channel:
            '1' or 'H' sets the expected signal to valid high.
            '0' or 'L' sets the expected signal to valid low.
            'V' sets the expected signal to 'valid' (valid low or valid high).
            'D' sets the expected signal to the same level as the driver signal.
            'X' sets the expected signal to 'don't care'.
            '*' lets the signal unchanged.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.SetDrivers(System.String)">
            <summary>
            Sets all signals and driver states.
            </summary>
            <param name="Signals">Signals as a string, one character for each channel [1,0,H,L,Z,*].</param>
            <remarks>
            The string must contain one character for each channel. Each character applies to the corresponding channel:
            '1' or 'H' sets the signal to high.
            '0' or 'L' sets the signal to low. 
            'Z' sets driver to tristate.
            '*' lets the signal unchanged.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.GetSignals">
            <summary>
            Gets the set signals.
            </summary>
            <returns>The signals of all channels as a bitmap</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.GetComparisons">
            <summary>
            Gets the set comparisons.
            </summary>
            <returns>The comparisons of all channels as a bitmap</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.GetSensorActivations">
            <summary>
            Gets the set sensor activations.
            </summary>
            <returns>The sensor activations of all channels as a bitmap</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.GetDriverActivations">
            <summary>
            Gets the set driver activations.
            </summary>
            <returns>The driver activations of all channels as a bitmap</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.CommitSettings">
            <summary>
            Commits all value settings.
            </summary>
            <returns>True, if there where changes to commit</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.PutAndFetch(System.String,System.Double,System.Double,System.Int32)">
            <summary>
            Sets all output signals and then fetches the input signals (implicitly commits the settings for drivers and sensors).
            </summary>
            <param name="DriverSignals">Signals as a string, one character for each channel [1,0,H,L,Z,*].</param>
            <param name="SignalTime">Minimum signal time.</param>
            <param name="StrobeTime">Time to wait before fetching.</param>
            <param name="FetchID">Fetch ID.</param>
            <remarks>
            The parameter string 'DriverSignals' must contain one character for each channel. Each character applies to the corresponding channel:
            '1' or 'H' sets the signal to high.
            '0' or 'L' sets the signal to low. 
            'Z' sets driver to tristate.
            '*' lets the signal unchanged.
            Each requested fetch operation must be identified by a unique number, the 'Fetch ID'.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.PutAndFetch(System.String,System.Double,System.Int32)">
            <summary>
            Sets all output signals and then fetches the input signals (implicitly commits the settings for drivers and sensors).
            </summary>
            <param name="DriverSignals">Signals as a string, one character for each channel [1,0,H,L,Z,*].</param>
            <param name="SignalTime">Minimum signal time.</param>
            <param name="FetchID">Fetch ID.</param>
            <remarks>
            The parameter string 'DriverSignals' must contain one character for each channel. Each character applies to the corresponding channel:
            '1' or 'H' sets the signal to high.
            '0' or 'L' sets the signal to low. 
            'Z' sets driver to tristate.
            '*' lets the signal unchanged.
            Signal Time will be wait before fetching the input signals.
            Each requested fetch operation must be identified by a unique number, the 'Fetch ID'.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.PutAndFetch(System.String,System.String,System.Double,System.Double,System.Int32)">
            <summary>
            Sets all output signals and then fetches the input signals (implicitly commits the settings for drivers and sensors).
            </summary>
            <param name="DriverSignals">Definition of output signals as a string, one character for each channel [1,0,H,L,Z,*].</param>
            <param name="SensorSignals">Definition of expected signals as a string, one character for each channel [1,0,H,L,V,D,X,*].</param>
            <param name="SignalTime">Minimum signal time.</param>
            <param name="StrobeTime">Time to wait before fetching.</param>
            <param name="FetchID">Fetch ID.</param>
            <remarks>
            The string parameters 'DriverSignals' and 'SensorSignals' must contain one character for each channel. Each character applies to the corresponding channel.
            DriverSignals:
            '1' or 'H' sets the signal to high.
            '0' or 'L' sets the signal to low. 
            'Z' sets driver to tristate.
            '*' lets the signal unchanged.
            SensorSignals:
            '1' or 'H' sets the expected signal to valid high.
            '0' or 'L' sets the expected signal to valid low.
            'V' sets the expected signal to 'valid' (valid low or valid high).
            'D' sets the expected signal to the same level as the driver signal.
            'X' sets the expected signal to 'don't care'.
            '*' lets the signal unchanged.
            Each requested fetch operation must be identified by a unique number, the 'Fetch ID'.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.PutAndFetch(System.String,System.String,System.Double,System.Int32)">
            <summary>
            Sets all output signals and then fetches the input signals (implicitly commits the settings for drivers and sensors).
            </summary>
            <param name="DriverSignals">Definition of output signals as a string, one character for each channel [1,0,H,L,Z,*].</param>
            <param name="SensorSignals">Definition of expected signals as a string, one character for each channel [1,0,H,L,V,D,X,*].</param>
            <param name="SignalTime">Minimum signal time.</param>
            <param name="FetchID">Fetch ID.</param>
            <remarks>
            The string parameters 'DriverSignals' and 'SensorSignals' must contain one character for each channel. Each character applies to the corresponding channel.
            DriverSignals:
            '1' or 'H' sets the signal to high.
            '0' or 'L' sets the signal to low. 
            'Z' sets driver to tristate.
            '*' lets the signal unchanged.
            SensorSignals:
            '1' or 'H' sets the expected signal to valid high.
            '0' or 'L' sets the expected signal to valid low.
            'V' sets the expected signal to 'valid' (valid low or valid high).
            'D' sets the expected signal to the same level as the driver signal.
            'X' sets the expected signal to 'don't care'.
            '*' lets the signal unchanged.
            Signal Time will be wait before fetching the input signals.
            Each requested fetch operation must be identified by a unique number, the 'Fetch ID'.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.PutDrivers(System.String,System.Double)">
            <summary>
            Sets all output signals (implicitly commits the settings for drivers and sensors).
            </summary>
            <param name="DriverSignals">Definition of output signals as a string, one character for each channel [1,0,H,L,Z,*].</param>
            <param name="SignalTime">Minimum signal time.</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.FetchInputSignals(System.Int32)">
            <summary>
            Sets a fetch for the input signals.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <remarks>
            Each requested fetch operation must be identified by a unique number, the 'Fetch ID'.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.GetFetchedInputSignals(System.Int32)">
            <summary>
            Gets the states of fetched input signals.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <returns>The input signals as a bitmap (0 is low and 1 is high)</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ReadInputSignals">
            <summary>
            Reads the present input signals.
            </summary>
            <returns>The input signals</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.WaitForInputSignals(System.Double)">
            <summary>
            Waits until the present input signals are matching the defined input signals.
            </summary>
            <param name="Timeout">The time to wait in seconds, or -1 to wait indefinitely.</param>
            <returns>The received input signals</returns>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.SlotNumber">
            <summary>
            The slot number of the power up unit containing the digital I/O unit.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.SetFrontConnectionsOn">
            <summary>
            Connects all digital i/o channels with the front connector.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.SetFrontConnectionsOff">
            <summary>
            Disconnects all digital i/o channels from the front connector.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.ClearConnections">
            <summary>
            Disconnects the device from the front connector.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.CommitConnections">
            <summary>
            Commits the front connections of the device.
            </summary>
            <returns>True, if there where changes to be committed</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.GetSettingsInfo">
            <summary>
            Creates a text with the present setting information of the device.
            </summary>
            <returns>The setting information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.GetSettingsInfo(System.String)">
            <summary>
            Creates a text with the present setting information of the device.
            </summary>
            <param name="Format">reserved</param>
            <returns>The setting information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.GetConnectionInfo">
            <summary>
            Creates a text with the present connection information of the device.
            </summary>
            <returns>The connection information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.DigitalIOUnit.GetConnectionInfo(System.String)">
            <summary>
            Creates a text with the present connection information of the device.
            </summary>
            <param name="Format">reserved</param>
            <returns>The connection information text</returns>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix">
            <summary>
            Relay Matrix
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.NoRail">
            <summary>
            The 'No Rail' number.
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.NoBus">
            <summary>
            The 'No Bus' number.
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.NoTestChannel">
            <summary>
            The 'No Test Channel' number.
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLineCount">
            <summary>
            The number of available bus lines.
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.RailCount">
            <summary>
            The number of available rails.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.Z(System.Object)">
            <summary>
            Do not use. For internal purposes only.
            </summary>
            <param name="arg">arg</param>
            <returns>object</returns>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLineSelection">
            <summary>
            The bus line selection.
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLineSelection.None">
            <summary>
            No bus line.
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLineSelection.Any">
            <summary>
            Any bus line.
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLineSelection.Even">
            <summary>
            A bus line with even number.
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLineSelection.Odd">
            <summary>
            A bus line with odd number.
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLineSelection.EvenAndOdd">
            <summary>
            A bus line pair.
            </summary>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.TestChannel">
            <summary>
            Test Channel
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.TestChannel.Name">
            <summary>
            The name of the test channel.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.TestChannel.TestChannelLines">
            <summary>
            The test channel lines.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.TestChannel.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object</returns>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.TestChannelConnection">
            <summary>
            Test Channel Connection
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.TestChannelConnection.TestChannel">
            <summary>
            Test Channel
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.TestChannelConnection.BusConnection">
            <summary>
            Bus Connection
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.TestChannelConnection.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object</returns>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusConnection">
            <summary>
            Bus Connection
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusConnection.HasPendingChanges">
            <summary>
            Indicates whether there are uncommitted changes.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusConnection.OddBusLine">
            <summary>
            Bus line with odd number.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusConnection.EvenBusLine">
            <summary>
            Bus line with even number.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusConnection.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object</returns>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.TestChannelRailConnection">
            <summary>
            Test Channel Rail Connection
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.TestChannelRailConnection.Rail">
            <summary>
            The rail.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.TestChannelRailConnection.BusLineOdd">
            <summary>
            The bus line with an odd number.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.TestChannelRailConnection.BusLineEven">
            <summary>
            The bus line with an even number.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.TestChannelRailConnection.RailOfBusLine(System.Int32)">
            <summary>
            Gets the rail related to a bus line.
            </summary>
            <param name="BusLine">Bus line</param>
            <returns>The rail number</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.TestChannelRailConnection.Release">
            <summary>
            Releases the test channel rail connection.
            </summary>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine">
            <summary>
            Bus Line
            </summary>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine.LineTypeEnum">
            <summary>
            The bus line type.
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine.LineTypeEnum.Even">
            <summary>
            Bus line with even number.
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine.LineTypeEnum.Odd">
            <summary>
            Bus line with odd number.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine.LineType">
            <summary>
            The bus line type.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine.Number">
            <summary>
            The number of the bus line.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine.Release">
            <summary>
            Releases the bus line.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine.ConnectExtern">
            <summary>
            Connects the bus line with the external I/O.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine.DisconnectExtern">
            <summary>
            Disconnects the bus line from the external I/O.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.GetForceBusLineOfRail(System.Int32)">
            <summary>
            Gets the corresponding force bus line for a rail.
            </summary>
            <param name="Rail">[1..4] Rail</param>
            <returns>The bus line</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.GetSenseBusOfRail(System.Int32)">
            <summary>
            Gets the corresponding sense bus line for a rail.
            </summary>
            <param name="Rail">[1..4] Rail</param>
            <returns>The bus line</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.ResourceRequest(System.Int32)">
            <summary>
            Requests for the resource 'Matrix'.
            </summary>
            <param name="ProcessID">ID of the current test process</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.GetDevice(TestFramework.VirtualTestSets.TestSet_A1.TestSet,System.Int32)">
            <summary>
            Gets a matrix object that gives access to the requested unit.
            </summary>
            <param name="Owner">The test set owning this device</param>
            <param name="MatrixSize">Matrix size (test channel line count).</param>
            <returns>A matrix unit</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.Reset">
            <summary>
            Resets the matrix (implicitly commits the settings).
            </summary>
            <remarks>
            All connections will be disconnected.
            All changes are committed automatically.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.Dispose">
            <summary>
            Releases the matrix object.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.GetConnectionInfo">
            <summary>
            Creates a text with the present connection information of the device.
            </summary>
            <returns>The connection information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.GetConnectionInfo(System.String)">
            <summary>
            Creates a text with the present connection information of the device.
            </summary>
            <param name="Format">reserved</param>
            <returns>The connection information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.GetSettingsInfo">
            <summary>
            Creates a text with the present setting information of the device.
            </summary>
            <returns>The setting information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.GetSettingsInfo(System.String)">
            <summary>
            Creates a text with the present setting information of the device.
            </summary>
            <param name="Format">reserved</param>
            <returns>The setting information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.CommitConnections">
            <summary>
            Commits all connections of the matrix.
            </summary>
            <returns>True, if there where changes to be committed</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.GetTestChannelBusConnection(System.Int32)">
            <summary>
            Gets a test channel bus connection.
            </summary>
            <param name="TestChannelLine">Test channel line.</param>
            <returns>The test channel bus connection</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.GetTestChannelBusConnection(System.String)">
            <summary>
            Gets a test channel bus connection.
            </summary>
            <param name="TestChannel">Test channel name.</param>
            <returns>The test channel bus connection</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.RequestBusLine">
            <summary>
            Requests a bus line.
            </summary>
            <returns>The bus line</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.RequestBusLine(TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine.LineTypeEnum)">
            <summary>
            Requests a bus line.
            </summary>
            <param name="LineType">The requested bus line type.</param>
            <returns>The bus line</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.RequestBusLine(System.Int32)">
            <summary>
            Requests a bus line.
            </summary>
            <param name="BusLine">[1..8] The requested bus line number.</param>
            <returns>The bus line</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.SetTestChannelConnection(System.String,TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine)">
            <summary>
            Connects a test channel with the bus.
            </summary>
            <param name="TestChannelName">Test channel name</param>
            <param name="BusLine">Bus line</param>
            <returns>The test channel connection object.</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.SetTestChannelConnection(System.String,TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLineSelection)">
            <summary>
            Connects a test channel with the bus.
            </summary>
            <param name="TestChannelName">Test channel name</param>
            <param name="BusLineSelection">Bus line selection</param>
            <returns>The test channel connection object.</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.SetTestChannelConnection(System.Int32[],TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine)">
            <summary>
            Connects a test channel with the bus.
            </summary>
            <param name="TestChannelLines">Test channel lines</param>
            <param name="BusLine">Bus line</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.SetTestChannelConnection(System.Int32[],TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLineSelection)">
            <summary>
            Connects a test channel with the bus.
            </summary>
            <param name="TestChannelLines">Test channel lines</param>
            <param name="BusLineSelection">Bus line selection</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.SetTestChannelConnection(System.Int32,TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine)">
            <summary>
            Connects a test channel with the bus.
            </summary>
            <param name="TestChannelLine">Test channel line</param>
            <param name="BusLine">Bus line</param>
            <returns>The test channel connection object.</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.SetTestChannelConnection(System.Int32,TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLineSelection)">
            <summary>
            Connects a test channel with the bus.
            </summary>
            <param name="TestChannelLine">Test channel line</param>
            <param name="BusLineSelection">Bus line selection</param>
            <returns>The test channel connection object.</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.ClearTestChannelConnection(System.String)">
            <summary>
            Disconnects a test channel.
            </summary>
            <param name="TestChannelName">Test channel name.</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.ClearTestChannelConnection(System.Int32)">
            <summary>
            Disconnects a test channel.
            </summary>
            <param name="TestChannelLine">Test channel line.</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.ClearTestChannelConnection(System.Int32[])">
            <summary>
            Disconnects a test channel.
            </summary>
            <param name="TestChannelLine">Test channel lines.</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.ClearConnections">
            <summary>
            Clears all connections of the matrix.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.CreateTestChannel(System.String,System.Int32[])">
            <summary>
            Creates a test channel within the matrix.
            </summary>
            <param name="TestChannelName">Test channel name.</param>
            <param name="TestChannelLines">Test channel lines</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.RemoveTestChannel(System.String)">
            <summary>
            Removes a test channel.
            </summary>
            <param name="TestChannelName">Test channel name.</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.GetTestChannelConnection(System.String)">
            <summary>
            Gets the connection object of a test channel.
            </summary>
            <param name="TestChannelName">Test channel name</param>
            <returns>The test channel connection object</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.GetTestChannelConnection(System.Int32)">
            <summary>
            Gets the connection object of a test channel.
            </summary>
            <param name="TestChannelLine">Test channel line</param>
            <returns>The test channel connection object</returns>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit">
            <summary>
            Measurement Unit
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.Voltmeter">
            <summary>
            The voltmeter module.
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrontEndFunction">
            <summary>
            The front end function module.
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounter">
            <summary>
            The frequency counter module.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.SlotNumber">
            <summary>
            The slot number of the device.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.Name">
            <summary>
            The name of the device.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.ResourceRequest(System.Int32,System.Int32)">
            <summary>
            Requests for the resource 'measurement unit'.
            </summary>
            <param name="ProcessID">ID of the current test process</param>
            <param name="DeviceCount">Number of requested devices</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.SpecificResourceRequest(System.Int32,System.Int32)">
            <summary>
            Requests for the resource 'measurement unit'.
            </summary>
            <param name="ProcessID">ID of the current test process</param>
            <param name="DeviceID">>ID of the device (starting with 1)</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.GetDevice(TestFramework.VirtualTestSets.TestSet_A1.TestSet,System.Int32)">
            <summary>
            Gives access to the requested measurement unit.
            </summary>
            <param name="Owner">The test set owning this device</param>
            <param name="Index">The index of this device within the owner's list</param>
            <returns>A measurement unit</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.Dispose">
            <summary>
            Releases the measurement object.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.GetSettingsInfo">
            <summary>
            Creates a text with the present setting information of the device.
            </summary>
            <returns>The setting information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.GetSettingsInfo(System.String)">
            <summary>
            Creates a text with the present setting information of the device.
            </summary>
            <param name="Format">reserved</param>
            <returns>The setting information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.GetConnectionInfo(System.String)">
            <summary>
            Creates a text with the present connection information of the device.
            </summary>
            <param name="Format">reserved</param>
            <returns>The connection information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.GetConnectionInfo">
            <summary>
            Creates a text with the present connection information of the device.
            </summary>
            <returns>The connection information text</returns>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.HasPendingChanges">
            <summary>
            Indicates whether the device has uncommitted settings.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.Reset">
            <summary>
            Resets the measurement device (implicitly commits the settings).
            </summary>
            <remarks>
            Assigns defaults to all settings. All connections will be disconnected.
            All changes are committed automatically.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.Reset(System.Boolean)">
            <summary>
            Resets the measurement device (implicitly commits the settings).
            </summary>
            <param name="Disconnect">If true, all connections will also be disconnected</param>
            <remarks>
            Assigns defaults to all settings.
            All changes are committed automatically.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.Commit">
            <summary>
            Commits all value and connection settings of the device.
            </summary>
            <returns>True, if there where changes to be committed</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.SetMatrixConnection(System.String,System.String)">
            <summary>
            Connects the device with test channels.
            </summary>
            <param name="TestChannelInputHigh">Test channel name for input high</param>
            <param name="TestChannelInputLow">Test channel name for input low</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.SetMatrixConnection(System.Int32,System.Int32)">
            <summary>
            Connects the device with test channels.
            </summary>
            <param name="TestChannelLineInputHigh">Test channel line for input high</param>
            <param name="TestChannelLineInputLow">Test channel line for input low</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.SetMatrixConnection(System.Int32[],System.Int32[])">
            <summary>
            Connects the device with test channels.
            </summary>
            <param name="TestChannelLinesInputHigh">Test channel lines for input high</param>
            <param name="TestChannelLinesInputLow">Test channel lines for input low</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.SetBusConnection(TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine,TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine)">
            <summary>
            Connects the device with the bus.
            </summary>
            <param name="InputHighLine">Line for input high</param>
            <param name="InputLowLine">Line for input low</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.GetBusConnection">
            <summary>
            Gets the bus connection object of the device.
            </summary>
            <returns>A bus connection object</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.ClearConnections">
            <summary>
            Clears all bus connections of the device.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.CommitConnections">
            <summary>
            Commits the bus connections of the device.
            </summary>
            <returns>True, if there where changes to be committed</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.CommitSettings">
            <summary>
            Commits all value settings.
            </summary>
            <returns>True, if there where changes to commit</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.Z(System.Object)">
            <summary>
            Do not use. For internal purposes only.
            </summary>
            <param name="arg">arg</param>
            <returns>object</returns>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrontEndFunctionModule">
            <summary>
            The front end function module class.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrontEndFunctionModule.Clear">
            <summary>
            Clears the selection of front end functions.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrontEndFunctionModule.Select(System.Int32)">
            <summary>
            Selects a front end function to be activated.
            </summary>
            <param name="FunctionID">The function ID</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrontEndFunctionModule.CommitSettings">
            <summary>
            Activates the selected front end function.
            </summary>
            <returns>True, if there where changes to commit</returns>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrontEndFunctionModule.HasPendingChanges">
            <summary>
            Indicates whether the device has uncommitted settings.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrontEndFunctionModule.GetSettingsInfo">
            <summary>
            Creates a text with the present setting information of the device.
            </summary>
            <returns>The setting information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrontEndFunctionModule.GetSettingsInfo(System.String)">
            <summary>
            Creates a text with the present setting information of the device.
            </summary>
            <param name="Format">reserved</param>
            <returns>The setting information text</returns>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule">
            <summary>
            The frequency counter module class.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.SetFrontConnectionOn">
            <summary>
            Connects the device with the front connector.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.SetFrontConnectionOff">
            <summary>
            Disconnects the device from the front connector.
            </summary>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.MeasuringRange">
            <summary>
            The measuring range.
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.MeasuringRange.Plus_Minus_30V">
            <summary>
            ±30V
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.MeasuringRange.Plus_Minus_5_25V">
            <summary>
            ±5.25V
            </summary>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.TriggerLevel">
            <summary>
            The trigger level.
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.TriggerLevel.Level_0_V">
            <summary>
            0V
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.TriggerLevel.Level_800_mV">
            <summary>
            800mV
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.TriggerLevel.Level_2_V">
            <summary>
            2V
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.TriggerLevel.Level_4_6_V">
            <summary>
            4.6V
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.TriggerLevel.Level_10_V">
            <summary>
            10V
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.TriggerLevel.Auto">
            <summary>
            Automatic
            </summary>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.GateTime">
            <summary>
            The gate time.
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.GateTime.Time_10_ms">
            <summary>
            10ms
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.GateTime.Time_100_ms">
            <summary>
            100ms
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.GateTime.Time_1_s">
            <summary>
            1s
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.GateTime.Time_10_s">
            <summary>
            10s
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.SetMeasuringRange(TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.MeasuringRange)">
            <summary>
            Sets the measuring range.
            </summary>
            <param name="MeasuringRange">The measuring range</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.SetTriggerLevel(TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.TriggerLevel)">
            <summary>
            Sets the trigger level.
            </summary>
            <param name="TriggerLevel">The trigger level</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.SetGateTime(TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.GateTime)">
            <summary>
            Sets the gate time.
            </summary>
            <param name="GateTime">The gate time</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.SetLowPass(System.Boolean)">
            <summary>
            Activates/Deactivates the  low pass filter.
            </summary>
            <param name="On">True activates the low pass filter</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.CommitSettings">
            <summary>
            Commits all value settings.
            </summary>
            <returns>True, if there where changes to commit</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.Measure(System.Double@)">
            <summary>
            Measures the frequency.
            </summary>
            <param name="Frequency">Measured frequency</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.FetchMeasurement(System.Int32)">
            <summary>
            Sets a fetch for a measurement.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <remarks>
            Each requested measurements must be identified by a unique number, the 'Fetch ID'.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.GetFetchedMeasurement(System.Int32,System.Double@)">
            <summary>
            Gets the result of a fetched measurement.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <param name="Frequency">Measured frequency</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.GetSettingsInfo">
            <summary>
            Creates a text with the present setting information of the device.
            </summary>
            <returns>The setting information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.GetSettingsInfo(System.String)">
            <summary>
            Creates a text with the present setting information of the device.
            </summary>
            <param name="Format">reserved</param>
            <returns>The setting information text</returns>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.FrequencyCounterModule.HasPendingChanges">
            <summary>
            Indicates whether the device has uncommitted settings.
            </summary>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.VoltmeterModule">
            <summary>
            The voltmeter module class.
            </summary>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.VoltmeterModule.MeasuringRange">
            <summary>
            The voltage measuring range.
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.VoltmeterModule.MeasuringRange.Maximum_100V">
            <summary>
            100V
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.VoltmeterModule.MeasuringRange.Maximum_10V">
            <summary>
            10V
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.VoltmeterModule.MeasuringRange.Maximum_1V">
            <summary>
            1V
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.VoltmeterModule.MeasuringRange.Maximum_100mV">
            <summary>
            100mV
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.VoltmeterModule.SetFrontConnectionOn">
            <summary>
            Connects the device with the front connector.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.VoltmeterModule.SetFrontConnectionOff">
            <summary>
            Disconnects the device from the front connector.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.VoltmeterModule.GetSettingsInfo">
            <summary>
            Creates a text with the present setting information of the device.
            </summary>
            <returns>The setting information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.VoltmeterModule.GetSettingsInfo(System.String)">
            <summary>
            Creates a text with the present setting information of the device.
            </summary>
            <param name="Format">reserved</param>
            <returns>The setting information text</returns>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.VoltmeterModule.HasPendingChanges">
            <summary>
            Indicates whether the device has uncommitted settings.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.VoltmeterModule.CommitSettings">
            <summary>
            Commits all value settings.
            </summary>
            <returns>True, if there where changes to commit</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.VoltmeterModule.SetMeasuringRange(System.Double)">
            <summary>
            Sets the voltage measuring range.
            </summary>
            <param name="MaxVoltage">The maximum voltage to be measured.</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.VoltmeterModule.SetMeasuringRange(TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.VoltmeterModule.MeasuringRange)">
            <summary>
            Sets the voltage measuring range.
            </summary>
            <param name="MeasuringRange">The measuring range.</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.VoltmeterModule.GetMeasuringRange">
            <summary>
            Gets the set voltage measuring range.
            </summary>
            <returns>The voltage measuring range</returns>
            <remarks>
            The value is calculated from the settings and the capabilities of the device.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.VoltmeterModule.Measure(System.Double@)">
            <summary>
            Measures the voltage.
            </summary>
            <param name="Voltage">Measured voltage</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.VoltmeterModule.FetchMeasurement(System.Int32)">
            <summary>
            Sets a fetch for a measurement.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <remarks>
            Each requested measurements must be identified by a unique number, the 'Fetch ID'.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.VoltmeterModule.FetchTriggeredMeasurement(System.Int32)">
            <summary>
            Sets a fetch for a measurement triggered by the timer.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <remarks>
            Each requested measurements must be identified by a unique number, the 'Fetch ID'.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.VoltmeterModule.FetchTriggeredMeasurement(System.Int32,System.Int32)">
            <summary>
            Sets a fetch for a measurement triggered by the timer.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <param name="SampleCount">The number of samples.</param>
            <remarks>
            Each requested measurements must be identified by a unique number, the 'Fetch ID'.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.VoltmeterModule.FetchTriggeredHighPrecisionMeasurement(System.Int32)">
            <summary>
            Sets a fetch for a high precision measurement triggered by the timer.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <remarks>
            Each requested measurements must be identified by a unique number, the 'Fetch ID'.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.VoltmeterModule.FetchTriggeredAdvancedPrecisionMeasurement(System.Int32,System.Int32)">
            <summary>
            Sets a fetch for an advanced precision measurement triggered by the timer.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <param name="PrecisionLevel">Precision level [1..100]</param>
            <remarks>
            Each requested measurements must be identified by a unique number, the 'Fetch ID'.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.VoltmeterModule.GetFetchedMeasurement(System.Int32,System.Int32,System.Double[]@)">
            <summary>
            Gets the result of a fetched measurement.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <param name="SampleCount">The number of samples.</param>
            <param name="Voltage">Measured voltage</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.VoltmeterModule.GetFetchedMeasurement(System.Int32,System.Double@)">
            <summary>
            Gets the result of a fetched measurement.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <param name="Voltage">Measured voltage</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.VoltmeterModule.GetFetchedHighPrecisionMeasurement(System.Int32,System.Double@)">
            <summary>
            Gets the result of a fetched high precision measurement.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <param name="Voltage">Measured voltage</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.MeasurementUnit.VoltmeterModule.GetFetchedAdvancedPrecisionMeasurement(System.Int32,System.Int32,System.Double@)">
            <summary>
            Gets the result of a fetched advanced precision measurement.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <param name="PrecisionLevel">Precision level [1..100]</param>
            <param name="Voltage">Measured voltage</param>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V">
            <summary>
            Stimulus Unit (10V)
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.Z(System.Object)">
            <summary>
            Do not use. For internal purposes only.
            </summary>
            <param name="arg">arg</param>
            <returns>object</returns>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.SlotNumber">
            <summary>
            The slot number of the device.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.Name">
            <summary>
            The name of the device.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.ResourceRequest(System.Int32,System.Int32)">
            <summary>
            Requests for the resource 'stimulus unit'.
            </summary>
            <param name="ProcessID">ID of the current test process</param>
            <param name="DeviceCount">Number of requested devices</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.GetDevice(TestFramework.VirtualTestSets.TestSet_A1.TestSet,System.Int32)">
            <summary>
            Gives access to the requested stimulus unit.
            </summary>
            <param name="Owner">The test set owning this device</param>
            <param name="Index">The index of this device within the owner's list</param>
            <returns>A stimulus unit</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.Dispose">
            <summary>
            Releases the stimulus object.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.GetSettingsInfo">
            <summary>
            Creates a text with the present setting information of the device.
            </summary>
            <returns>The setting information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.GetSettingsInfo(System.String)">
            <summary>
            Creates a text with the present setting information of the device.
            </summary>
            <param name="Format">reserved</param>
            <returns>The setting information text</returns>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.HasPendingChanges">
            <summary>
            Indicates whether the device has uncommitted settings.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.Reset">
            <summary>
            Resets the stimulus device (implicitly commits the settings).
            </summary>
            <remarks>
            Assigns defaults to all settings. All connections will be disconnected.
            All changes are committed automatically.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.Reset(System.Boolean)">
            <summary>
            Resets the stimulus device (implicitly commits the settings).
            </summary>
            <param name="Disconnect">If true, all connections will also be disconnected</param>
            <remarks>
            Assigns defaults to all settings.
            All changes are committed automatically.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.Commit">
            <summary>
            Commits all value and connection settings of the device.
            </summary>
            <returns>True, if there where changes to be committed</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.CommitSettings">
            <summary>
            Commits all value settings.
            </summary>
            <returns>True, if there where changes to commit</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.SetStimulationVoltage(System.Double)">
            <summary>
            Sets the stimulation voltage.
            </summary>
            <param name="Voltage">Stimulation voltage</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.SetStimulationPattern(System.Double[])">
            <summary>
            Sets the stimulation pattern for multiple stimulation.
            </summary>
            <param name="Pattern">The pattern values to be multiplied with the stimulation voltage</param>
            <remarks>
            The actual stimulation voltage values will be calculated by multiplying the pattern value with the stimulation voltage value.
            The stimulation voltage value can be set by calling method 'SetStimulationVoltage'.  <see cref="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.SetStimulationVoltage(System.Double)"/>
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.SetStimulationCurrent(System.Double)">
            <summary>
            Sets the stimulation current.
            </summary>
            <param name="Current">Stimulation current</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.SetMeasurementVoltageRange(System.Double)">
            <summary>
            Sets the measurement voltage range.
            </summary>
            <param name="MaxVoltage">Maximum voltage to be measured</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.SetMeasurementCurrentRange(System.Double)">
            <summary>
            Sets the measurement current range.
            </summary>
            <param name="MaxCurrent">Maximum current to be measured</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.SetPermanentStimulationEnabled">
            <summary>
            Enables permanent stimulation.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.SetPermanentStimulationDisabled">
            <summary>
            Disables permanent stimulation.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.SetStimulationModePulseOnTrigger">
            <summary>
            Enables pulse stimulation triggered by the timer.
            </summary>
            <remarks>
            If permanent stimulation is enabled it will end implicitly.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.SetStimulationModeMultipleOnTrigger">
            <summary>
            Enables multiple stimulation triggered by the timer.
            </summary>
            <remarks>
            If permanent stimulation is enabled it will end implicitly.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.GetStimulationCurrent">
            <summary>
            Gets the set stimulation current value.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.GetStimulationVoltage">
            <summary>
            Gets the set stimulation voltage value.
            </summary>
            <returns>The voltage value</returns>
            <remarks>
            The voltage value is calculated from the set value and the capabilities of the device.
            </remarks>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.MaxStimulationCurrent">
            <summary>
            The maximum stimulation current.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.MaxStimulationVoltage">
            <summary>
            The maximum stimulation voltage.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.GetMeasurementVoltageRange">
            <summary>
            Gets the set measurement voltage range.
            </summary>
            <returns>The measurement voltage range</returns>
            <remarks>
            The voltage value is calculated from the set value and the capabilities of the device.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.GetMeasurementCurrentRange">
            <summary>
            Gets the set measurement current range.
            </summary>
            <returns>The measurement current range</returns>
            <remarks>
            The voltage value is calculated from the set value and the capabilities of the device.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.Measure(System.Double@,System.Double@)">
            <summary>
            Measures current and voltage.
            </summary>
            <param name="Current">Measured current</param>
            <param name="Voltage">Measured voltage</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.FetchMeasurement(System.Int32)">
            <summary>
            Sets a fetch for a measurement.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <remarks>
            Each requested measurements must be identified by a unique number, the 'Fetch ID'.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.FetchTriggeredMeasurement(System.Int32)">
            <summary>
            Sets a fetch for a measurement triggered by the timer.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <remarks>
            Each requested measurements must be identified by a unique number, the 'Fetch ID'.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.FetchTriggeredMeasurement(System.Int32,System.Int32)">
            <summary>
            Sets a fetch for a measurement triggered by the timer.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <param name="SampleCount">The number of samples.</param>
            <remarks>
            Each requested measurements must be identified by a unique number, the 'Fetch ID'.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.FetchTriggeredHighPrecisionMeasurement(System.Int32)">
            <summary>
            Sets a fetch for a high precision measurement triggered by the timer.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <remarks>
            Each requested measurements must be identified by a unique number, the 'Fetch ID'.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.FetchTriggeredAdvancedPrecisionMeasurement(System.Int32,System.Int32)">
            <summary>
            Sets a fetch for an advanced precision measurement triggered by the timer.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <param name="PrecisionLevel">Precision level [1..100]</param>
            <remarks>
            Each requested measurements must be identified by a unique number, the 'Fetch ID'.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.GetFetchedMeasurement(System.Int32,System.Double@,System.Double@)">
            <summary>
            Gets the result of a fetched measurement.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <param name="Current">Measured current</param>
            <param name="Voltage">Measured voltage</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.GetFetchedMeasurement(System.Int32,System.Int32,System.Double[]@,System.Double[]@)">
            <summary>
            Gets the result of a fetched measurement.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <param name="SampleCount">The number of samples.</param>
            <param name="Current">Measured current</param>
            <param name="Voltage">Measured voltage</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.GetFetchedHighPrecisionMeasurement(System.Int32,System.Double@,System.Double@)">
            <summary>
            Gets the result of a fetched high precision measurement.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <param name="Current">Measured current</param>
            <param name="Voltage">Measured voltage</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.GetFetchedAdvancedPrecisionMeasurement(System.Int32,System.Int32,System.Double@,System.Double@)">
            <summary>
            Gets the result of a fetched advanced precision measurement.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <param name="PrecisionLevel">Precision level [1..100]</param>
            <param name="Current">Measured current</param>
            <param name="Voltage">Measured voltage</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.ClearConnections">
            <summary>
            Clears all bus connections of the device.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.SetBusConnection(TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine,TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine,TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine,TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine)">
            <summary>
            Connects the device with the bus.
            </summary>
            <param name="HighForceBusLine">High force bus line</param>
            <param name="HighSenseBusLine">High sense bus line</param>
            <param name="LowForceBusLine">Low force bus line</param>
            <param name="LowSenseBusLine">Low sense bus line</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.SetBusConnection(TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine,TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine)">
            <summary>
            Connects the device with the bus.
            </summary>
            <param name="HighForceLine">High force bus line</param>
            <param name="LowForceLine">Low force bus line</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.SetBusConnection(TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusConnection,TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusConnection,TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusConnection,TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusConnection)">
            <summary>
            Connects the device with the bus.
            </summary>
            <param name="HighForceConnection">High force test channel bus connection</param>
            <param name="HighSenseConnection">High sense test channel bus connection</param>
            <param name="LowForceConnection">Low force test channel bus connection</param>
            <param name="LowSenseConnection">Low sense test channel bus connection</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.SetBusConnection(TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusConnection,TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusConnection)">
            <summary>
            Connects the device with the bus.
            </summary>
            <param name="HighForceConnection">High force test channel bus connection</param>
            <param name="LowForceConnection">Low force test channel bus connection</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.GetBusConnection">
            <summary>
            Gets the bus connection object of the device.
            </summary>
            <returns>The bus connection object</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.CommitConnections">
            <summary>
            Commits the bus connections of the device.
            </summary>
            <returns>True, if there where changes to be committed</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.SetMatrixConnection(System.String,System.String,System.String,System.String)">
            <summary>
            Connects the device with test channels.
            </summary>
            <param name="TestChannelHighForce">Test channel name for high force</param>
            <param name="TestChannelHighSense">Test channel name for high sense </param>
            <param name="TestChannelLowForce">Test channel name for low force</param>
            <param name="TestChannelLowSense">Test channel name for low sense</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.SetMatrixConnection(System.String,System.String)">
            <summary>
            Connects the device with test channels.
            </summary>
            <param name="TestChannelHighForce">Test channel name for high force</param>
            <param name="TestChannelLowForce">Test channel name for low force</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.SetMatrixConnection(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Connects the device with test channels.
            </summary>
            <param name="TestChannelLineHighForce">Test channel line for high force</param>
            <param name="TestChannelLineHighSense">Test channel line for high sense</param>
            <param name="TestChannelLineLowForce">Test channel line for low force</param>
            <param name="TestChannelLineLowSense">Test channel line for low sense</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.SetMatrixConnection(System.Int32,System.Int32)">
            <summary>
            Connects the device with test channels.
            </summary>
            <param name="TestChannelLineHighForce">Test channel line for high force</param>
            <param name="TestChannelLineLowForce">Test channel line for low force</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.SetMatrixConnection(System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
            <summary>
            Connects the device with test channels.
            </summary>
            <param name="TestChannelLinesHighForce">Test channel line for high force</param>
            <param name="TestChannelLinesHighSense">Test channel line for high sense</param>
            <param name="TestChannelLinesLowForce">Test channel line for low force</param>
            <param name="TestChannelLinesLowSense">Test channel line for low sense</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.SetMatrixConnection(System.Int32[],System.Int32[])">
            <summary>
            Connects the device with test channels.
            </summary>
            <param name="TestChannelLinesHighForce">Test channel lines for high force</param>
            <param name="TestChannelLinesLowForce">Test channel lines for low sense</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.SetGuardConnection(TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V,System.String)">
            <summary>
            Connects this device as a guard stimulus with the guard high force channel.
            </summary>
            <param name="StimulusToBeGuarded">The stimulus to be guarded.</param>
            <param name="TestChannelGuardHighForce">Test channel guard high force.</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.SetGuardConnection(TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V,System.Int32[])">
            <summary>
            Connects this device as a guard stimulus with the guard high force channel.
            </summary>
            <param name="StimulusToBeGuarded">The stimulus to be guarded.</param>
            <param name="TestChannelGuardHighForce">Test channel guard high force.</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.SetGuardConnection(TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V,System.Int32)">
            <summary>
            Connects this device as a guard stimulus with the guard high force channel.
            </summary>
            <param name="StimulusToBeGuarded">The stimulus to be guarded.</param>
            <param name="TestChannelGuardHighForce">Test channel guard high force.</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.SetGuardBusConnection(TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V,System.Int32,System.Int32)">
            <summary>
            Connects this device as a guard stimulus with the guard high force channel.
            </summary>
            <param name="StimulusToBeGuarded">The stimulus to be guarded.</param>
            <param name="TestChannelGuardHighForceBusLine">Bus line of the test channel guard high force.</param>
            <param name="TestChannelGuardHighSenseBusLine">Bus line of the test channel guard high sense.</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.GetConnectionInfo">
            <summary>
            Creates a text with the present connection information of the device.
            </summary>
            <returns>The connection information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.GetConnectionInfo(System.String)">
            <summary>
            Creates a text with the present connection information of the device.
            </summary>
            <param name="Format">reserved</param>
            <returns>The connection information text</returns>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V">
            <summary>
            Stimulus Unit (60V)
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.Z(System.Object)">
            <summary>
            Do not use. For internal purposes only.
            </summary>
            <param name="arg">arg</param>
            <returns>object</returns>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.SlotNumber">
            <summary>
            The slot number of the device.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.Name">
            <summary>
            The name of the device.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.ResourceRequest(System.Int32,System.Int32)">
            <summary>
            Requests for the resource 'stimulus unit'.
            </summary>
            <param name="ProcessID">ID of the current test process</param>
            <param name="DeviceCount">Number of requested devices</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.GetDevice(TestFramework.VirtualTestSets.TestSet_A1.TestSet,System.Int32)">
            <summary>
            Gives access to the requested stimulus unit.
            </summary>
            <param name="Owner">The test set owning this device</param>
            <param name="Index">The index of this device within the owner's list</param>
            <returns>A stimulus unit</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.Dispose">
            <summary>
            Releases the stimulus object.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.GetSettingsInfo">
            <summary>
            Creates a text with the present setting information of the device.
            </summary>
            <returns>The setting information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.GetSettingsInfo(System.String)">
            <summary>
            Creates a text with the present setting information of the device.
            </summary>
            <param name="Format">reserved</param>
            <returns>The setting information text</returns>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.HasPendingChanges">
            <summary>
            Indicates whether the device has uncommitted settings.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.Reset">
            <summary>
            Resets the stimulus device (implicitly commits the settings).
            </summary>
            <remarks>
            Assigns defaults to all settings. All connections will be disconnected.
            All changes are committed automatically.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.Reset(System.Boolean)">
            <summary>
            Resets the stimulus device (implicitly commits the settings).
            </summary>
            <param name="Disconnect">If true, all connections will also be disconnected</param>
            <remarks>
            Assigns defaults to all settings.
            All changes are committed automatically.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.Commit">
            <summary>
            Commits all value and connection settings of the device.
            </summary>
            <returns>True, if there where changes to be committed</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.CommitSettings">
            <summary>
            Commits all value settings.
            </summary>
            <returns>True, if there where changes to commit</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.SetStimulationVoltage(System.Double)">
            <summary>
            Sets the stimulation voltage.
            </summary>
            <param name="Voltage">Stimulation voltage</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.SetStimulationPattern(System.Double[])">
            <summary>
            Sets the stimulation pattern for multiple stimulation.
            </summary>
            <param name="Pattern">The pattern values to be multiplied with the stimulation voltage</param>
            <remarks>
            The actual stimulation voltage values will be calculated by multiplying the pattern value with the stimulation voltage value.
            The stimulation voltage value can be set by calling method 'SetStimulationVoltage'.  <see cref="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus10V.SetStimulationVoltage(System.Double)"/>
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.SetStimulationCurrent(System.Double)">
            <summary>
            Sets the stimulation current.
            </summary>
            <param name="Current">Stimulation current</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.SetMeasurementVoltageRange(System.Double)">
            <summary>
            Sets the measurement voltage range.
            </summary>
            <param name="MaxVoltage">Maximum voltage to be measured</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.SetMeasurementCurrentRange(System.Double)">
            <summary>
            Sets the measurement current range.
            </summary>
            <param name="MaxCurrent">Maximum current to be measured</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.SetPermanentStimulationEnabled">
            <summary>
            Enables permanent stimulation.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.SetPermanentStimulationDisabled">
            <summary>
            Disables permanent stimulation.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.SetStimulationModePulseOnTrigger">
            <summary>
            Enables pulse stimulation triggered by the timer.
            </summary>
            <remarks>
            If permanent stimulation is enabled it will end implicitly.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.SetStimulationModeMultipleOnTrigger">
            <summary>
            Enables multiple stimulation triggered by the timer.
            </summary>
            <remarks>
            If permanent stimulation is enabled it will end implicitly.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.GetStimulationCurrent">
            <summary>
            Gets the set stimulation current value.
            </summary>
            <returns>The current value</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.GetStimulationVoltage">
            <summary>
            Gets the set stimulation voltage value.
            </summary>
            <returns>The voltage value</returns>
            <remarks>
            The voltage value is calculated from the set value and the capabilities of the device.
            </remarks>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.MaxStimulationCurrent">
            <summary>
            The maximum stimulation current.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.MaxStimulationVoltage">
            <summary>
            The maximum stimulation voltage.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.GetMeasurementVoltageRange">
            <summary>
            Gets the set measurement voltage range.
            </summary>
            <returns>The measurement voltage range</returns>
            <remarks>
            The voltage value is calculated from the set value and the capabilities of the device.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.GetMeasurementCurrentRange">
            <summary>
            Gets the set measurement current range.
            </summary>
            <returns>The measurement current range</returns>
            <remarks>
            The voltage value is calculated from the set value and the capabilities of the device.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.Measure(System.Double@,System.Double@)">
            <summary>
            Measures current and voltage.
            </summary>
            <param name="Current">Measured current</param>
            <param name="Voltage">Measured voltage</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.FetchMeasurement(System.Int32)">
            <summary>
            Sets a fetch for a measurement.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <remarks>
            Each requested measurements must be identified by a unique number, the 'Fetch ID'.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.FetchTriggeredMeasurement(System.Int32)">
            <summary>
            Sets a fetch for a measurement triggered by the timer.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <remarks>
            Each requested measurements must be identified by a unique number, the 'Fetch ID'.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.FetchTriggeredMeasurement(System.Int32,System.Int32)">
            <summary>
            Sets a fetch for a measurement triggered by the timer.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <param name="SampleCount">Sample count</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.FetchTriggeredHighPrecisionMeasurement(System.Int32)">
            <summary>
            Sets a fetch for a high precision measurement triggered by the timer.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <remarks>
            Each requested measurements must be identified by a unique number, the 'Fetch ID'.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.FetchTriggeredAdvancedPrecisionMeasurement(System.Int32,System.Int32)">
            <summary>
            Sets a fetch for an advanced precision measurement triggered by the timer.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <param name="PrecisionLevel">Precision level [1..100]</param>
            <remarks>
            Each requested measurements must be identified by a unique number, the 'Fetch ID'.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.GetFetchedMeasurement(System.Int32,System.Double@,System.Double@)">
            <summary>
            Gets the result of a fetched measurement.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <param name="Current">Measured current</param>
            <param name="Voltage">Measured voltage</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.GetFetchedMeasurement(System.Int32,System.Int32,System.Double[]@,System.Double[]@)">
            <summary>
            Gets the result of a fetched measurement.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <param name="SampleCount">The number of samples.</param>
            <param name="Current">Measured current</param>
            <param name="Voltage">Measured voltage</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.GetFetchedHighPrecisionMeasurement(System.Int32,System.Double@,System.Double@)">
            <summary>
            Gets the result of a fetched high precision measurement.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <param name="Current">Measured current</param>
            <param name="Voltage">Measured voltage</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.GetFetchedAdvancedPrecisionMeasurement(System.Int32,System.Int32,System.Double@,System.Double@)">
            <summary>
            Gets the result of a fetched advanced precision measurement.
            </summary>
            <param name="FetchID">Fetch ID</param>
            <param name="PrecisionLevel">Precision level [1..100]</param>
            <param name="Current">Measured current</param>
            <param name="Voltage">Measured voltage</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.ClearConnections">
            <summary>
            Clears all bus connections of the device.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.SetBusConnection(TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine,TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine,TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine,TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine)">
            <summary>
            Connects the device with the bus.
            </summary>
            <param name="HighForceBusLine">High force bus line</param>
            <param name="HighSenseBusLine">High sense bus line</param>
            <param name="LowForceBusLine">Low force bus line</param>
            <param name="LowSenseBusLine">Low sense bus line</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.SetBusConnection(TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine,TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusLine)">
            <summary>
            Connects the device with the bus.
            </summary>
            <param name="HighForceLine">High force bus line</param>
            <param name="LowForceLine">Low force bus line</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.SetBusConnection(TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusConnection,TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusConnection,TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusConnection,TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusConnection)">
            <summary>
            Connects the device with the bus.
            </summary>
            <param name="HighForceConnection">High force test channel bus connection</param>
            <param name="HighSenseConnection">High sense test channel bus connection</param>
            <param name="LowForceConnection">Low force test channel bus connection</param>
            <param name="LowSenseConnection">Low sense test channel bus connection</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.SetBusConnection(TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusConnection,TestFramework.VirtualTestSets.TestSet_A1.Devices.Matrix.BusConnection)">
            <summary>
            Connects the device with the bus.
            </summary>
            <param name="HighForceConnection">High force test channel bus connection</param>
            <param name="LowForceConnection">Low force test channel bus connection</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.GetBusConnection">
            <summary>
            Gets the bus connection object of the device.
            </summary>
            <returns>The bus connection object</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.CommitConnections">
            <summary>
            Commits the bus connections of the device.
            </summary>
            <returns>True, if there where changes to be committed</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.SetMatrixConnection(System.String,System.String,System.String,System.String)">
            <summary>
            Connects the device with test channels.
            </summary>
            <param name="TestChannelHighForce">Test channel name for high force</param>
            <param name="TestChannelHighSense">Test channel name for high sense </param>
            <param name="TestChannelLowForce">Test channel name for low force</param>
            <param name="TestChannelLowSense">Test channel name for low sense</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.SetMatrixConnection(System.String,System.String)">
            <summary>
            Connects the device with test channels.
            </summary>
            <param name="TestChannelHighForce">Test channel name for high force</param>
            <param name="TestChannelLowForce">Test channel name for low force</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.SetMatrixConnection(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Connects the device with test channels.
            </summary>
            <param name="TestChannelLineHighForce">Test channel line for high force</param>
            <param name="TestChannelLineHighSense">Test channel line for high sense</param>
            <param name="TestChannelLineLowForce">Test channel line for low force</param>
            <param name="TestChannelLineLowSense">Test channel line for low sense</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.SetMatrixConnection(System.Int32,System.Int32)">
            <summary>
            Connects the device with test channels.
            </summary>
            <param name="TestChannelLineHighForce">Test channel line for high force</param>
            <param name="TestChannelLineLowForce">Test channel line for low force</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.SetMatrixConnection(System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
            <summary>
            Connects the device with test channels.
            </summary>
            <param name="TestChannelLinesHighForce">Test channel line for high force</param>
            <param name="TestChannelLinesHighSense">Test channel line for high sense</param>
            <param name="TestChannelLinesLowForce">Test channel line for low force</param>
            <param name="TestChannelLinesLowSense">Test channel line for low sense</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.SetMatrixConnection(System.Int32[],System.Int32[])">
            <summary>
            Connects the device with test channels.
            </summary>
            <param name="TestChannelLinesHighForce">Test channel lines for high force</param>
            <param name="TestChannelLinesLowForce">Test channel lines for low sense</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.GetConnectionInfo">
            <summary>
            Creates a text with the present connection information of the device.
            </summary>
            <returns>The connection information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Stimulus60V.GetConnectionInfo(System.String)">
            <summary>
            Creates a text with the present connection information of the device.
            </summary>
            <param name="Format">reserved</param>
            <returns>The connection information text</returns>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.Devices.Timer">
            <summary>
            The timer device.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Timer.Z(System.Object)">
            <summary>
            Do not use. For internal purposes only.
            </summary>
            <param name="arg">arg</param>
            <returns>object</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Timer.ResourceRequest(System.Int32)">
            <summary>
            Requests for the resource 'timer'.
            </summary>
            <param name="ProcessID">ID of the current test process</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Timer.GetDevice(TestFramework.VirtualTestSets.TestSet_A1.TestSet)">
            <summary>
            Gets a timer object that gives access to the requested unit.
            </summary>
            <param name="Owner">The test set owning this device</param>
            <returns>A timer unit</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Timer.PutDelay(System.Double)">
            <summary>
            Waits for a specified time.
            </summary>
            <param name="Delay">Time to be waited</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Timer.PutPulseTrigger(System.Double)">
            <summary>
            Triggers stimulation and measurement.
            </summary>
            <param name="MeasurementDelay">The time to be waited before the measurement begins.</param>
            <remarks>
            The duration of the pulse depends on the measurement delay. A discharge time is automatically added.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Timer.PutPulseTrigger(System.Double,System.Double)">
            <summary>
            Triggers pulse stimulation and measurement.
            </summary>
            <param name="MeasurementDelay">The time to be waited before the measurement begins.</param>
            <param name="DischargeTime">The discharge time to be waited after stimulation.</param>
            <remarks>
            The duration of the pulse depends on the measurement delay. A discharge time is added as defined.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Timer.PutPulseTrigger(System.Double,System.Double,System.Int32)">
            <summary>
            Triggers pulse stimulation and measurement.
            </summary>
            <param name="MeasurementDelay">The time to be waited before the measurement begins.</param>
            <param name="MeasurementPeriod">The time period between the measurements.</param>
            <param name="MeasurementCount">The number of measurements.</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Timer.PutPulseTrigger(System.Double,System.Double,System.Int32,System.Double)">
            <summary>
            Triggers pulse stimulation and measurement.
            </summary>
            <param name="MeasurementDelay">The time to be waited before the first measurement begins.</param>
            <param name="MeasurementPeriod">The time period between the measurements.</param>
            <param name="MeasurementCount">The number of measurements.</param>
            <param name="DischargeTime">The discharge time to be waited after stimulation.</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Timer.PutMultipleTrigger(System.Double,System.Int32,System.Double,System.Int32)">
            <summary>
            Triggers multiple stimulation and measurement.
            </summary>
            <param name="StimulusPeriod">The time period of a single stimulation.</param>
            <param name="StimulusCount">The number of stimulations.</param>
            <param name="MeasurementPeriod">The time period between the measurements.</param>
            <param name="MeasurementCountPerStimulation">The number of measurements per stimulation.</param>
            <remarks>
            MeasurementPeriod * MeasurementCountPerStimulation should not be longer than StimulusPeriod.
            The last measurement of a stimulation period always happens at the end of the period.
            The total number of measurements is StimulusCount * MeasurementCountPerStimulation.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Timer.PutMultipleTrigger(System.Double,System.Int32,System.Double,System.Int32,System.Double)">
            <summary>
            Triggers multiple stimulation and measurement.
            </summary>
            <param name="StimulusPeriod">The time period of a single stimulation.</param>
            <param name="StimulusCount">The number of stimulations.</param>
            <param name="MeasurementPeriod">The time period between the measurements.</param>
            <param name="MeasurementCountPerStimulation">The number of measurements per stimulation.</param>
            <param name="DischargeTime">The discharge time to be waited after stimulation.</param>
            <remarks>
            MeasurementPeriod * MeasurementCountPerStimulation should not be longer than StimulusPeriod.
            The last measurement of a stimulation period always happens at the end of the period.
            The total number of measurements is StimulusCount * MeasurementCountPerStimulation.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Timer.PutPulseTriggerForHighPrecisionMeasurement(System.Double)">
            <summary>
            Triggers pulse stimulation and high precision measurement.
            </summary>
            <param name="MeasurementDelay">The time to be waited before the measurement begins.</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Timer.PutPulseTriggerForHighPrecisionMeasurement(System.Double,System.Double)">
            <summary>
            Triggers pulse stimulation and high precision measurement.
            </summary>
            <param name="MeasurementDelay">The time to be waited before the measurement begins.</param>
            <param name="DischargeTime">The discharge time to be waited after stimulation.</param>
            <remarks>
            The duration of the pulse depends on the measurement delay. A discharge time is automatically added.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Timer.PutPulseTriggerForAdvancedPrecisionMeasurement(System.Int32,System.Double)">
            <summary>
            Triggers pulse stimulation and advanced precision measurement.
            </summary>
            <param name="PrecisionLevel">Precision level [1..100]</param>
            <param name="MeasurementDelay">The time to be waited before the measurement begins.</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Timer.PutPulseTriggerForAdvancedPrecisionMeasurement(System.Int32,System.Double,System.Double)">
            <summary>
            Triggers pulse stimulation and advanced precision measurement.
            </summary>
            <param name="PrecisionLevel">Precision level [1..100]</param>
            <param name="MeasurementDelay">The time to be waited before the measurement begins.</param>
            <param name="DischargeTime">The discharge time to be waited after stimulation.</param>
            <remarks>
            The duration of the pulse depends on the measurement delay. A discharge time is automatically added.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Timer.GetPulseTriggerCapabilities(System.Double,System.Double,System.Int32,System.Double,System.Double@,System.Double@,System.Int32@,System.Double@)">
            <summary>
            Gets the timer capabilities for pulse stimulation triggering.
            </summary>
            <param name="MeasurementDelay">The time to be waited before the first measurement begins.</param>
            <param name="MeasurementPeriod">The time period between the measurements.</param>
            <param name="MeasurementCount">The number of measurements.</param>
            <param name="DischargeTime">The discharge time to be waited after stimulation.</param>
            <param name="ActutalMeasurementDelay">The actual measurement delay.</param>
            <param name="ActutalMeasurementPeriod">The actual measurement period.</param>
            <param name="ActutalMeasurementCount">The actual measurement count.</param>
            <param name="ActualDischargeTime">The actual discharge time.</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Timer.GetMultipleTriggerCapabilities(System.Double,System.Int32,System.Double,System.Int32,System.Double,System.Double@,System.Int32@,System.Double@,System.Int32@,System.Double@)">
            <summary>
            Gets the timer capabilities for multiple stimulation triggering.
            </summary>
            <param name="StimulusPeriod">The time period of a single stimulation.</param>
            <param name="StimulusCount">The number stimulations.</param>
            <param name="MeasurementPeriod">The time period between the measurements.</param>
            <param name="MeasurementCountPerStimulation">The number of measurements per stimulation.</param>
            <param name="DischargeTime">The discharge time to be waited after stimulation.</param>
            <param name="ActutalStimulusPeriod">The actual stimulus period.</param>
            <param name="ActutalStimulusCount">The actual stimulus count.</param>
            <param name="ActutalMeasurementPeriod">The actual measurement period.</param>
            <param name="ActutalMeasurementCountPerStimulation">The actual measurement count per stimulation.</param>
            <param name="ActualDischargeTime">The actual discharge time.</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.Devices.Timer.Dispose">
            <summary>
            Releases the timer object.
            </summary>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.TestSet">
            <summary>
            Test Set 'A' version 1
            </summary>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.TestSet.EvaluationMode">
            <summary>
            Evaluation mode
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.TestSet.EvaluationMode.EarlyEvaluation">
            <summary>
            The results will be evaluated within the 'Execute' method.
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.TestSet.EvaluationMode.LateEvaluation">
            <summary>
            The results will not be evaluated with the 'Execute' method, but within the 'Evaluate' method.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Controller">
            <summary>
            Controller unit
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Timer">
            <summary>
            Timer unit
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Matrix">
            <summary>
            Test channel matrix
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Stimulus10V">
            <summary>
            Array of stimulus units (10V).
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Stimulus60V">
            <summary>
            Array of stimulus units (60V).
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.TestSet.MeasurementUnit">
            <summary>
            Array of measurement units.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.TestSet.DigitalIOUnit">
            <summary>
            Array of bidirectional digital I/O units.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.TestSet.PowerUpUnit">
            <summary>
            Array of power up units.
            </summary>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.TestSet.PowerLineFrequency">
            <summary>
            The power line frequency [Hertz].
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.ClearConnections">
            <summary>
            Clears all connections of the whole test set.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Commit">
            <summary>
            Commits all value and connection settings of the whole test set.
            </summary>
            <returns>True, if there where changes to be committed</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.CommitSettings">
            <summary>
            Commits all value settings of the whole test set.
            </summary>
            <returns>True, if there where changes to commit</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.CommitConnections">
            <summary>
            Commits all connections of the whole test set.
            </summary>
            <returns>True, if there where changes to commit</returns>
        </member>
        <member name="P:TestFramework.VirtualTestSets.TestSet_A1.TestSet.HasPendingChanges">
            <summary>
            Indicates whether the test set has uncommitted settings.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Apply">
            <summary>
            Applies all settings and connections.
            </summary>
            <remarks>
            Pending connections of the whole test set will be committed.
            Pending settings of the whole test set will be committed.
            The corresponding commands will be send to the controller.
            The method returns when all commands are executed.
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.GetConnectionInfo">
            <summary>
            Creates a text with the present connection information of the device.
            </summary>
            <returns>The connection information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.GetConnectionInfo(System.String)">
            <summary>
            Creates a text with the present connection information of the device.
            </summary>
            <param name="Format">reserved</param>
            <returns>The connection information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.GetTestChannelConnectionInfo(System.String)">
            <summary>
            Creates a text with the present connection information of a test channel.
            </summary>
            <param name="TestChannel">Test channel name</param>
            <returns>The connection information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.GetSettingsInfo">
            <summary>
            Creates a text with the present setting information of the device.
            </summary>
            <returns>The setting information text</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.GetSettingsInfo(System.String)">
            <summary>
            Creates a text with the present setting information of the device.
            </summary>
            <param name="Format">reserved</param>
            <returns>The setting information text</returns>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.TestSet.DeviceConfig.Name">
            <summary>
            
            </summary>
        </member>
        <member name="F:TestFramework.VirtualTestSets.TestSet_A1.TestSet.DeviceConfig.Number">
            <summary>
            
            </summary>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Config">
            <summary>
            The test set configuration class.
            </summary>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Config.Unit">
            <summary>
            The unit class.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Config.Unit.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Config.BusConnectionUnit">
            <summary>
            The bus connection unit class.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Config.BusConnectionUnit.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Config.FrontConnectionUnit">
            <summary>
            The front connection unit class.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Config.FrontConnectionUnit.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Config.FrontAndBusConnectionUnit">
            <summary>
            The front and bus connection unit class.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Config.FrontAndBusConnectionUnit.#ctor(System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Config.Stimulus10V">
            <summary>
            The stimulus 10V unit class.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Config.Stimulus10V.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Config.Stimulus60V">
            <summary>
            The stimulus 60V unit class.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Config.Stimulus60V.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Config.MeasurementUnit">
            <summary>
            The measurement unit class.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Config.MeasurementUnit.#ctor(System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="UnitNumber">The unit number of the requested device. [1..n]</param>
            <remarks>
            All units of the same type are numbered starting with 1.
            They are ordered in sequence of their slot number.
            </remarks>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Config.DigitalIOUnit">
            <summary>
            The digital I/O unit class.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Config.DigitalIOUnit.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="UnitNumber">The unit number of the requested device. [1..n]</param>
            <remarks>
            All units of the same type are numbered starting with 1.
            They are ordered in sequence of their slot number.
            </remarks>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Config.PowerUpUnit">
            <summary>
            The power up unit class.
            </summary>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Config.PowerUpUnit.AuxiliarySwitch">
            <summary>
            The auxiliary switch class.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Config.PowerUpUnit.AuxiliarySwitch.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="UnitNumber">The unit number of the requested device. [1..n]</param>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Config.PowerUpUnit.PowerSupply">
            <summary>
            The power supply class.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Config.PowerUpUnit.PowerSupply.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="UnitNumber">The unit number of the requested device. [1..n]</param>
        </member>
        <member name="T:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Config.PowerUpUnit.DigitalIO">
            <summary>
            The digital in / digital out class.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Config.PowerUpUnit.DigitalIO.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="UnitNumber">The unit number of the requested device. [1..n]</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Config.PowerUpUnit.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="UnitNumber">The unit number of the requested device. [1..n]</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.RequestResources(System.Int32,System.String,TestFramework.VirtualTestSets.TestSet_A1.TestSet.EvaluationMode)">
            <summary>
            Requests for the configured devices.
            </summary>
            <param name="ProcessID">ID of the current test process.</param>
            <param name="ConfigurationString">Device configuration.</param>
            <param name="EvaluationMode">Evaluation mode</param>
            <remarks>
            The test set can be configured. The configuration string can contain the following items:
            MatrixSize
            Stimulus10V
            Stimulus60V
            MeasurementUnit
            DigitalIOUnit
            PowerUpUnit
            PowerUpUnit.AuxSwitch
            PowerUpUnit.PowerSupply
            PowerUpUnit.DigitalIO
            Some item names can be followed by a colon and a number.
            The items are separated by commas. Items of unneeded devices can be omitted.
            Meaning of numbers:
            MatrixSize : the line count
            MeasurementUnit : ID of the requested measurement unit (optional)
            DigitalIOUnit : ID of the requested digital I/O unit
            PowerUpUnit : ID of the requested power up unit
            PowerUpUnit.AuxSwitch : ID of the requested power up unit
            PowerUpUnit.PowerSupply : ID of the requested power up unit
            PowerUpUnit.DigitalIO : ID of the requested power up unit
            Example:
            "MatrixSize:128, Stimulus10V, Stimulus10V, Stimulus60V, MeasurementUnit, PowerUpUnit.PowerSupply:1, PowerUpUnit.DigitalIO:1"
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.RequestResources(System.Int32,System.Int32,TestFramework.VirtualTestSets.TestSet_A1.TestSet.Config.Unit[],TestFramework.VirtualTestSets.TestSet_A1.TestSet.EvaluationMode)">
            <summary>
            Requests for the configured devices.
            </summary>
            <param name="ProcessID">The ID of the current test process.</param>
            <param name="MatrixSize">The matrix size (the count of test channel lines).</param>
            <param name="Units">A list of the requested units.</param>
            <param name="EvaluationMode">The evaluation mode.</param>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.GetDevice(System.Int32,System.String)">
            <summary>
            Gives access to the requested test set.
            </summary>
            <param name="ProcessID">ID of the current test process</param>
            <param name="ConfigurationString">The configuration string</param>
            <returns>A test set</returns>
            <remarks>
            The test set can be configured. The configuration string can contain the following items:
            MatrixSize
            Stimulus10V
            Stimulus60V
            Measurement
            DigitalIO
            PowerUpUnit
            PowerUpUnit.AuxSwitch
            PowerUpUnit.PowerSupply
            PowerUpUnit.DigitalIO
            Some item names can be followed by a colon and a number.
            The items are separated by commas. Items of unneeded devices can be omitted.
            Meaning of numbers:
            MatrixSize : the line count
            DigitalIO : ID of the requested digital I/O unit
            PowerUpUnit : ID of the requested power up unit
            PowerUpUnit.AuxSwitch : ID of the requested power up unit
            PowerUpUnit.PowerSupply : ID of the requested power up unit
            PowerUpUnit.DigitalIO : ID of the requested power up unit
            Example:
            "MatrixSize:128, Stimulus10V, Stimulus10V, Stimulus60V, MeasurementUnit, PowerUpUnit.PowerSupply:1, PowerUpUnit.DigitalIO:1"
            </remarks>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.GetDevice(System.Int32,System.Int32,TestFramework.VirtualTestSets.TestSet_A1.TestSet.Config.Unit[])">
            <summary>
            Gives access to the requested test set.
            </summary>
            <param name="ProcessID">The ID of the current test process.</param>
            <param name="MatrixSize">The Matrix size (the count of test channel lines).</param>
            <param name="Units">This configuration of units.</param>
            <returns>A test set</returns>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Finalize">
            <summary>
            Finalizes the test set object.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Dispose">
            <summary>
            Releases the test set object.
            </summary>
        </member>
        <member name="M:TestFramework.VirtualTestSets.TestSet_A1.TestSet.Z(System.Object)">
            <summary>
            Do not use. For internal purposes only.
            </summary>
            <param name="arg">arg</param>
            <returns>object</returns>
        </member>
    </members>
</doc>
